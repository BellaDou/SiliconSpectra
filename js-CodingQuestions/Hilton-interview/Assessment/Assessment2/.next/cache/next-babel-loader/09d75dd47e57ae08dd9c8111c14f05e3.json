{"ast":null,"code":"import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { autoRehydrate } from \"redux-persist\";\nconst initialState = {};\nconst middleWare = [thunk];\nexport default createStore(rootReducer, //localStorageState,\ninitialState, composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())); // const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const localStorageState = LoadfromLocal();\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };","map":{"version":3,"sources":["/Users/zhiwang/Downloads/Assessment/Assessment2/redux/store.js"],"names":["createStore","applyMiddleware","store","composeWithDevTools","rootReducer","thunk","autoRehydrate","initialState","middleWare"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,KAAvC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,eAAeL,WAAW,CACxBI,WADwB,EAExB;AACAG,YAHwB,EAIxBJ,mBAAmB,CAACF,eAAe,CAAC,GAAGO,UAAJ,CAAhB,EAAiCF,aAAa,EAA9C,CAJK,CAA1B,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { autoRehydrate } from \"redux-persist\";\nconst initialState = {};\nconst middleWare = [thunk];\n\nexport default createStore(\n  rootReducer,\n  //localStorageState,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())\n);\n\n// const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const localStorageState = LoadfromLocal();\n\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };\n"]},"metadata":{},"sourceType":"module"}
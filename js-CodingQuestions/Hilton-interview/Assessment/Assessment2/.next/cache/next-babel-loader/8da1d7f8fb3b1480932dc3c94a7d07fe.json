{"ast":null,"code":"import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nvar initialState = {};\nvar middleWare = [thunk];\nvar persistConfig = {\n  key: \"root\",\n  storage: storage\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nexport default createStore(rootReducer, //localStorageState,\ninitialState, composeWithDevTools(applyMiddleware.apply(void 0, middleWare), autoRehydrate())); // const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const localStorageState = LoadfromLocal();\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };","map":{"version":3,"sources":["/Users/zhiwang/Downloads/Assessment/Assessment2/redux/store.js"],"names":["createStore","applyMiddleware","store","composeWithDevTools","rootReducer","thunk","persistStore","persistReducer","storage","initialState","middleWare","persistConfig","key","persistedReducer","autoRehydrate"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,KAAvC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AAEA,IAAMM,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBJ,EAAAA,OAAO,EAAPA;AAFoB,CAAtB;AAKA,IAAMK,gBAAgB,GAAGN,cAAc,CAACI,aAAD,EAAgBP,WAAhB,CAAvC;AAEA,eAAeJ,WAAW,CACxBI,WADwB,EAExB;AACAK,YAHwB,EAIxBN,mBAAmB,CAACF,eAAe,MAAf,SAAmBS,UAAnB,CAAD,EAAiCI,aAAa,EAA9C,CAJK,CAA1B,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default createStore(\n  rootReducer,\n  //localStorageState,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())\n);\n\n// const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const localStorageState = LoadfromLocal();\n\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };\n"]},"metadata":{},"sourceType":"module"}
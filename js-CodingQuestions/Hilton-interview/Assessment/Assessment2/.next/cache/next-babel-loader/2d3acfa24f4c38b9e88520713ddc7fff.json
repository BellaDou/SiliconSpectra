{"ast":null,"code":"import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nexport default (initialState => {\n  let initStore;\n  const isClient = false;\n\n  if (isClient) {\n    const {\n      persistReducer\n    } = require(\"redux-persist\");\n\n    const storage = require(\"redux-persist/lib/storage\").default;\n\n    const persistConfig = {\n      key: \"root\",\n      storage\n    };\n    initStore = createStore(persistReducer(persistConfig, rootReducer), initialState, applyMiddleware());\n    initStore.__PERSISTOR = persistStore(initStore);\n  } else {\n    initStore = createStore(rootReducer, initialState, applyMiddleware());\n  }\n\n  return initStore;\n}); // const initialState = {};\n// const middleWare = [thunk];\n// const persistConfig = {\n//   key: \"root\",\n//   storage\n// };\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// const isClient = typeof window !== \"undefined\";\n// export const initStore = () => {\n//   if (isClient) {\n//     let store = createStore(\n//       persistedReducer,\n//       initialState\n//       // composeWithDevTools(applyMiddleware(...middleWare))\n//     );\n//     let persistor = persistStore(store);\n//     store.__PERSISTOR = persistStore(store);\n//   } else {\n//     let store = createStore(\n//       rootReducer,\n//       initialState\n//       //composeWithDevTools(applyMiddleware(...middleWare))\n//     );\n//   }\n//   return { store };\n// };\n// export default createStore(\n//   rootReducer,\n//   //localStorageState,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())\n// );\n// const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const localStorageState = LoadfromLocal();\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };","map":{"version":3,"sources":["/Users/zhiwang/Downloads/Assessment/Assessment2/redux/store.js"],"names":["createStore","applyMiddleware","store","composeWithDevTools","rootReducer","thunk","persistStore","persistReducer","storage","initialState","initStore","isClient","require","default","persistConfig","key","__PERSISTOR"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,KAAvC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,gBAAeC,YAAY,IAAI;AAC7B,MAAIC,SAAJ;AACA,QAAMC,QAAQ,QAAd;;AACA,MAAIA,QAAJ,EAAc;AACZ,UAAM;AAAEJ,MAAAA;AAAF,QAAqBK,OAAO,CAAC,eAAD,CAAlC;;AACA,UAAMJ,OAAO,GAAGI,OAAO,CAAC,2BAAD,CAAP,CAAqCC,OAArD;;AACA,UAAMC,aAAa,GAAG;AACpBC,MAAAA,GAAG,EAAE,MADe;AAEpBP,MAAAA;AAFoB,KAAtB;AAIAE,IAAAA,SAAS,GAAGV,WAAW,CACrBO,cAAc,CAACO,aAAD,EAAgBV,WAAhB,CADO,EAErBK,YAFqB,EAGrBR,eAAe,EAHM,CAAvB;AAKAS,IAAAA,SAAS,CAACM,WAAV,GAAwBV,YAAY,CAACI,SAAD,CAApC;AACD,GAbD,MAaO;AACLA,IAAAA,SAAS,GAAGV,WAAW,CAACI,WAAD,EAAcK,YAAd,EAA4BR,eAAe,EAA3C,CAAvB;AACD;;AACD,SAAOS,SAAP;AACD,CApBD,E,CAsBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nexport default initialState => {\n  let initStore;\n  const isClient = typeof window !== \"undefined\";\n  if (isClient) {\n    const { persistReducer } = require(\"redux-persist\");\n    const storage = require(\"redux-persist/lib/storage\").default;\n    const persistConfig = {\n      key: \"root\",\n      storage\n    };\n    initStore = createStore(\n      persistReducer(persistConfig, rootReducer),\n      initialState,\n      applyMiddleware()\n    );\n    initStore.__PERSISTOR = persistStore(initStore);\n  } else {\n    initStore = createStore(rootReducer, initialState, applyMiddleware());\n  }\n  return initStore;\n};\n\n// const initialState = {};\n// const middleWare = [thunk];\n\n// const persistConfig = {\n//   key: \"root\",\n//   storage\n// };\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// const isClient = typeof window !== \"undefined\";\n\n// export const initStore = () => {\n//   if (isClient) {\n//     let store = createStore(\n//       persistedReducer,\n//       initialState\n//       // composeWithDevTools(applyMiddleware(...middleWare))\n//     );\n//     let persistor = persistStore(store);\n//     store.__PERSISTOR = persistStore(store);\n//   } else {\n//     let store = createStore(\n//       rootReducer,\n//       initialState\n//       //composeWithDevTools(applyMiddleware(...middleWare))\n//     );\n//   }\n//   return { store };\n// };\n\n// export default createStore(\n//   rootReducer,\n//   //localStorageState,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())\n// );\n\n// const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const localStorageState = LoadfromLocal();\n\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };\n"]},"metadata":{},"sourceType":"module"}
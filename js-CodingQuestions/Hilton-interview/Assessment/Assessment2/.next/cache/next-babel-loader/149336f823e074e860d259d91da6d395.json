{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst initialState = {};\nconst middleWare = [thunk];\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const initStore = () => {\n  let store = createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\n  let persistor = persistStore(store);\n  return {\n    store\n  };\n}; // export default createStore(\n//   rootReducer,\n//   //localStorageState,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())\n// );\n// const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n// const localStorageState = LoadfromLocal();\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };","map":{"version":3,"sources":["/Users/zhiwang/Downloads/Assessment/Assessment2/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","rootReducer","thunk","persistStore","persistReducer","storage","initialState","middleWare","persistConfig","key","persistedReducer","initStore","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AAEjD,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACL,KAAD,CAAnB;AAEA,MAAMM,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBJ,EAAAA;AAFoB,CAAtB;AAKA,MAAMK,gBAAgB,GAAGN,cAAc,CAACI,aAAD,EAAgBP,WAAhB,CAAvC;AAEA,OAAO,MAAMU,SAAS,GAAG,MAAM;AAC7B,MAAIC,KAAK,GAAGd,WAAW,CACrBY,gBADqB,EAErBJ,YAFqB,EAGrBN,mBAAmB,CAACD,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAHE,CAAvB;AAKA,MAAIM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CARM,C,CAUP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const initStore = () => {\n  let store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleWare))\n  );\n  let persistor = persistStore(store);\n  return { store };\n};\n\n// export default createStore(\n//   rootReducer,\n//   //localStorageState,\n//   initialState,\n//   composeWithDevTools(applyMiddleware(...middleWare), autoRehydrate())\n// );\n\n// const LoadfromLocal = () => {\n//   try {\n//     const state = localStorage.getItem(\"state\");\n//     console.log(\"state\", state);\n//     if (state === null) {\n//       return undefined;\n//     }\n//     return JSON.parse(state);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const saveToLocal = initialState => {\n//   try {\n//     localStorage.setItem(\"state\", JSON.stringify(initialState));\n//     // console.log(localStorage);\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// const localStorageState = LoadfromLocal();\n\n// export const initStore = () => {\n//   let store = createStore(\n//     rootReducer,\n//     localStorageState,\n//     //initialState,\n//     composeWithDevTools(applyMiddleware(...middleWare))\n//   );\n//   console.log(\"getstate\", store.getState());\n//   store.subscribe(() => saveToLocal(store.getState()));\n//   return store;\n// };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CHECK_ROOM } from \"./types\";\nexport var checkRoom = function checkRoom(id) {\n  return function (dispatch, getState) {\n    console.log(id);\n    var rooms = getState().roomObj.rooms;\n\n    if (id == 1) {}\n\n    console.log(rooms);\n    rooms.map(function (room) {\n      if (room.id = id) {\n        return _objectSpread({}, room, {\n          checked: !checked\n        });\n      }\n    });\n    console.log(rooms); //   dispatch({\n    //     type: CHECK_ROOM,\n    //     payload: id\n    //   });\n  };\n};","map":{"version":3,"sources":["/Users/zhiwang/Downloads/Assessment/Assessment2/redux/actions/roomActions.js"],"names":["CHECK_ROOM","checkRoom","id","dispatch","getState","console","log","rooms","roomObj","map","room","checked"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,SAA3B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,EAAE;AAAA,SAAI,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACrDC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,EAAZ;AACA,QAAIK,KAAK,GAAGH,QAAQ,GAAGI,OAAX,CAAmBD,KAA/B;;AAEA,QAAIL,EAAE,IAAI,CAAV,EAAa,CACZ;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAA,IAAAA,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AAChB,UAAKA,IAAI,CAACR,EAAL,GAAUA,EAAf,EAAoB;AAClB,iCAAYQ,IAAZ;AAAkBC,UAAAA,OAAO,EAAE,CAACA;AAA5B;AACD;AACF,KAJD;AAKAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ,EAZqD,CAcrD;AACA;AACA;AACA;AACD,GAlB0B;AAAA,CAApB","sourcesContent":["import { CHECK_ROOM } from \"./types\";\n\nexport const checkRoom = id => (dispatch, getState) => {\n  console.log(id);\n  let rooms = getState().roomObj.rooms;\n\n  if (id == 1) {\n  }\n  console.log(rooms);\n  rooms.map(room => {\n    if ((room.id = id)) {\n      return { ...room, checked: !checked };\n    }\n  });\n  console.log(rooms);\n\n  //   dispatch({\n  //     type: CHECK_ROOM,\n  //     payload: id\n  //   });\n};\n"]},"metadata":{},"sourceType":"module"}
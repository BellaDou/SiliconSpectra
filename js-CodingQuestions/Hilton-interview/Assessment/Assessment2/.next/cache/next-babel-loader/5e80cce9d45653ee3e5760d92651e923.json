{"ast":null,"code":"import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst LoadfromLocal = () => {\n  try {\n    const state = localStorage.getItem(\"reduxState\");\n\n    if (state === null) {\n      return undefined;\n    }\n\n    return JSON.parse(state);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst saveToLocal = initialState => {\n  try {\n    localStorage.setItem(\"reduxState\", JSON.stringify(initialState));\n    console.log(localStorage);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst localStorageState = LoadfromLocal();\nexport const initStore = () => {\n  return createStore(rootReducer, localStorageState, composeWithDevTools(applyMiddleware(...middleWare)));\n};","map":{"version":3,"sources":["/Users/zhiwang/Downloads/Assessment/Assessment2/redux/store.js"],"names":["createStore","applyMiddleware","store","composeWithDevTools","rootReducer","thunk","initialState","middleWare","LoadfromLocal","state","localStorage","getItem","undefined","JSON","parse","e","console","log","saveToLocal","setItem","stringify","localStorageState","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,KAAvC,QAAoD,OAApD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACF,KAAD,CAAnB;;AAEA,MAAMG,aAAa,GAAG,MAAM;AAC1B,MAAI;AACF,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAd;;AACA,QAAIF,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAOG,SAAP;AACD;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAP;AACD,GAND,CAME,OAAOM,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAVD;;AAYA,MAAMG,WAAW,GAAGZ,YAAY,IAAI;AAClC,MAAI;AACFI,IAAAA,YAAY,CAACS,OAAb,CAAqB,YAArB,EAAmCN,IAAI,CAACO,SAAL,CAAed,YAAf,CAAnC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACD,GAHD,CAGE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,CAPD;;AASA,MAAMM,iBAAiB,GAAGb,aAAa,EAAvC;AACA,OAAO,MAAMc,SAAS,GAAG,MAAM;AAC7B,SAAOtB,WAAW,CAChBI,WADgB,EAEhBiB,iBAFgB,EAGhBlB,mBAAmB,CAACF,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAHH,CAAlB;AAKD,CANM","sourcesContent":["import { createStore, applyMiddleware, store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst initialState = {};\nconst middleWare = [thunk];\n\nconst LoadfromLocal = () => {\n  try {\n    const state = localStorage.getItem(\"reduxState\");\n    if (state === null) {\n      return undefined;\n    }\n    return JSON.parse(state);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst saveToLocal = initialState => {\n  try {\n    localStorage.setItem(\"reduxState\", JSON.stringify(initialState));\n    console.log(localStorage);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst localStorageState = LoadfromLocal();\nexport const initStore = () => {\n  return createStore(\n    rootReducer,\n    localStorageState,\n    composeWithDevTools(applyMiddleware(...middleWare))\n  );\n};\n"]},"metadata":{},"sourceType":"module"}